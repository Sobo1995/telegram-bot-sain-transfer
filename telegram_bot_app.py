
from flask import Flask, request
import telegram
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
import os
import re

TOKEN = "7913606596:AAFnw_ur4a5U0hs2mbeD-kAeZwIXJY89-pI"
bot = telegram.Bot(token=TOKEN)
app = Flask(__name__)
HANSH = 462

def send_main_menu(chat_id):
    keyboard = [
        [InlineKeyboardButton("üì§ –ì—É–π–≤—É—É–ª–≥–∞", callback_data='guiwuulga'),
         InlineKeyboardButton("üìà –•–∞–Ω—à", callback_data='hansh')],
        [InlineKeyboardButton("üí∞ –®–∏–º—Ç–≥—ç–ª", callback_data='shimtgel'),
         InlineKeyboardButton("üìÑ –ë–∏—á–∏–≥ –±–∞—Ä–∏–º—Ç", callback_data='barimt')],
        [InlineKeyboardButton("‚ÑπÔ∏è –ë–∏–¥–Ω–∏–π —Ç—É—Ö–∞–π", callback_data='bidnii_tuhai')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    bot.send_message(chat_id=chat_id,
                     text="–°–∞–π–Ω –±–∞–π–Ω–∞ —É—É! –¢–∞ –¥–∞—Ä–∞–∞—Ö “Ø–π–ª—á–∏–ª–≥—ç—ç–Ω—ç—ç—Å —Å–æ–Ω–≥–æ–Ω–æ —É—É:",
                     reply_markup=reply_markup)

def normalize_input(text):
    text = text.lower()
    latin_map = {
        "hansh": "—Ö–∞–Ω—à", "shimtgel": "—à–∏–º—Ç–≥—ç–ª", "barimt": "–±–∞—Ä–∏–º—Ç", "bichig": "–±–∏—á–∏–≥",
        "tuhai": "—Ç—É—Ö–∞–π", "bidnii": "–±–∏–¥–Ω–∏–π", "guiwuulga": "–≥—É–π–≤—É—É–ª–≥–∞", "guivuulga": "–≥—É–π–≤—É—É–ª–≥–∞",
        "dans": "–¥–∞–Ω—Å", "dugaar": "–¥—É–≥–∞–∞—Ä", "utas": "—É—Ç–∞—Å", "holbogdoh": "—Ö–æ–ª–±–æ–≥–¥–æ—Ö",
        "tugrug": "—Ç”©–≥—Ä”©–≥", "tug": "—Ç”©–≥—Ä”©–≥", "yuan": "—é–∞–Ω—å"
    }
    for latin, cyrillic in latin_map.items():
        text = re.sub(rf"\b{latin}\b", cyrillic, text)
    text = re.sub(r"(\d{3,})\s*(tug|‚ÇÆ|—Ç”©–≥—Ä”©–≥)", r"\1 —Ç”©–≥—Ä”©–≥", text)
    text = re.sub(r"(\d{3,})\s*(yuan|—é–∞–Ω—å|¬•)", r"\1 —é–∞–Ω—å", text)
    return text

def get_fee_by_yuan(yuan):
    if yuan <= 1000:
        return 3000, 30
    elif yuan <= 10000:
        return 5000, 50
    elif yuan <= 20000:
        return 5000, 100
    elif yuan <= 50000:
        return 10000, 100
    elif yuan <= 100000:
        return 20000, 100
    else:
        return 25000, 100

def handle_keyword(chat_id, text):
    text = normalize_input(text)

    if "–≥—É–π–≤—É—É–ª" in text:
        return "üì§ –ì—É–π–≤—É—É–ª–≥–∞ —Ö–∏–π—Ö–∏–π–Ω —Ç—É–ª–¥ —Ç–∞–Ω—ã –±–∏—á–∏–≥ –±–∞—Ä–∏–º—Ç, —Ö“Ø–ª—ç—ç–Ω –∞–≤–∞–≥—á–∏–π–Ω –º—ç–¥—ç—ç–ª—ç–ª —à–∞–∞—Ä–¥–ª–∞–≥–∞—Ç–∞–π. –¢–∞ –ª–∞–≤–ª–∞—Ö —É—Ç—Å–∞–∞—Ä –±–∏–¥—ç–Ω—Ç—ç–π —Ö–æ–ª–±–æ–≥–¥–æ–Ω–æ —É—É: 80908090"
    elif "—Ö–∞–Ω—à" in text:
        return "üìà –ú–∞–Ω–∞–π —Ö–∞–Ω—à –≥“Ø–π–ª–≥—ç—ç–Ω–∏–π –Ω”©—Ö—Ü–ª”©”©—Å —Ö–∞–º–∞–∞—Ä–∞–Ω —É—è–Ω —Ö–∞—Ç–∞–Ω —Ç–æ–≥—Ç–æ–æ–≥–¥–¥–æ–≥. –¢–∞ –±–∏–¥—ç–Ω—Ç—ç–π —Ö–æ–ª–±–æ–≥–¥–æ–Ω —Ö–∞–º–≥–∏–π–Ω —Ç–∞–∞—Ç–∞–π —Ö–∞–Ω—à–∏–π–≥ –∞–≤–∞–∞—Ä–∞–π!"
    elif "—à–∏–º—Ç–≥—ç–ª" in text:
        return "üí∞ –®–∏–º—Ç–≥—ç–ª–∏–π–Ω —à–∞—Ç–ª–∞–ª:\n1 ‚Äì 1,000¬• ‚Üí 3,000‚ÇÆ + 30¬•\n1,000 ‚Äì 10,000¬• ‚Üí 5,000‚ÇÆ + 50¬•\n10,000 ‚Äì 20,000¬• ‚Üí 5,000‚ÇÆ + 100¬•\n20,000 ‚Äì 50,000¬• ‚Üí 10,000‚ÇÆ + 100¬•\n50,000 ‚Äì 100,000¬• ‚Üí 20,000‚ÇÆ + 100¬•\n100,000¬•+ ‚Üí 25,000‚ÇÆ + 100¬•"
    elif "–±–∞—Ä–∏–º—Ç" in text or "–±–∏—á–∏–≥" in text:
        return "üìÑ –®–∞–∞—Ä–¥–ª–∞–≥–∞—Ç–∞–π –±–∏—á–∏–≥ –±–∞—Ä–∏–º—Ç:\n- –ò–ª–≥—ç—ç–≥—á–∏–π–Ω –±–∏—á–∏–≥ –±–∞—Ä–∏–º—Ç (–∑—É—Ä–∞–≥, —Ñ–∞–π–ª)\n- –•“Ø–ª—ç—ç–Ω –∞–≤–∞–≥—á–∏–π–Ω –±–∏—á–∏–≥ –±–∞—Ä–∏–º—Ç (–∑—É—Ä–∞–≥, —Ñ–∞–π–ª)\n- –î–∞–Ω—Å–Ω—ã –º—ç–¥—ç—ç–ª—ç–ª, –±–∞–Ω–∫–Ω—ã —Ö–∞—è–≥\n- –ì“Ø–π–ª–≥—ç—ç–Ω–∏–π —É—Ç–≥–∞\n- –ê–∂–∏–ª “Ø–π–ª—á–∏–ª–≥—ç—ç–Ω–∏–π –≥—ç—Ä—ç—ç (—à–∞–∞—Ä–¥–ª–∞–≥–∞—Ç–∞–π —Ç–æ—Ö–∏–æ–ª–¥–æ–ª–¥)"
    elif "–±–∏–¥–Ω–∏–π —Ç—É—Ö–∞–π" in text or "—Ç—É—Ö–∞–π" in text:
        return (
            "‚ÑπÔ∏è –ë–∏–¥–Ω–∏–π —Ç—É—Ö–∞–π\n"
            "–ë–∏–¥ —Ö–∞–º–≥–∏–π–Ω —Å“Ø“Ø–ª–∏–π–Ω “Ø–µ–∏–π–Ω —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏, —É—Ö–∞–∞–ª–∞–≥ —à–∏–π–¥–ª–∏–π–≥ –∞—à–∏–≥–ª–∞–Ω —Ö–∞—Ä–∏–ª—Ü–∞–≥—á–¥—ã–Ω —Å–∞–Ω—Ö“Ø“Ø–≥–∏–π–Ω —Ö—ç—Ä—ç–≥–ª—ç—ç–≥ —Ö—è–ª–±–∞—Ä—à—É—É–ª–∞—Ö –∑–æ—Ä–∏–ª–≥—ã–Ω –¥–æ—Ä 7 –¥–∞—Ö—å –∂–∏–ª–¥—ç—ç –∞–º–∂–∏–ª—Ç—Ç–∞–π “Ø–π–ª –∞–∂–∏–ª–ª–∞–≥–∞–∞ —è–≤—É—É–ª–∂ –±–∞–π–Ω–∞.\n"
            "–î—ç–ª—Ö–∏–π–Ω —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã–≥ “Ø–π–ª—á–∏–ª–≥—ç—ç–Ω–¥—ç—ç –Ω—ç–≤—Ç—Ä“Ø“Ø–ª–∂, —é–∞–Ω–∏–π–Ω –±–æ–ª–æ–Ω –±—É—Å–∞–¥ –≥–∞–¥–∞–∞–¥ —Ç”©–ª–±”©—Ä —Ç–æ–æ—Ü–æ–æ–≥ —Ü–∞—Ö–∏–º–∂—É—É–ª–∞–Ω —Å–∞–ª–±–∞—Ä—Ç–∞–∞ —Ç“Ø“Ø—á—ç—ç–ª—ç–≥—á –Ω—å –±–æ–ª–æ–Ω –∞–∂–∏–ª–ª–∞–∂ –±–∞–π–Ω–∞.\n\n"
            "üéØ “Æ–Ω—ç—Ç –∑“Ø–π–ª: –ê–∂–∏–ª—Ç–∞–Ω, –•–∞—Ä–∏–ª—Ü–∞–≥—á, –ù–∏–π–≥—ç–º\n"
            "üî≠ –ê–ª—Å—ã–Ω —Ö–∞—Ä–∞–∞: –û—é—É–Ω–ª–∞–≥ –∏—Ä—ç—ç–¥“Ø–π, —Å–∞–π–Ω —Å–∞–π—Ö–Ω—ã–≥ –¥—ç–º–∂–∏–Ω—ç\n"
            "üéØ –≠—Ä—Ö—ç–º –∑–æ—Ä–∏–ª–≥–æ: –Æ–∞–Ω–∏–π–Ω —à–∏–ª–∂“Ø“Ø–ª–≥–∏–π–Ω –º—ç—Ä–≥—ç–∂–ª–∏–π–Ω —ë—Å –∑“Ø–π—Ç—ç–π, —Ö—É—É–ª—å —ë—Å–Ω—ã –¥–∞–≥—É—É –≥“Ø–π—Ü—ç—Ç–≥—ç–Ω —Ö–∞—Ä–∏–ª—Ü–∞–≥—á–∏–π–Ω —Å–∞–Ω—Ö“Ø“Ø–≥–∏–π–Ω —Ö—ç—Ä—ç–≥—Ü—ç—ç–≥ —Ö—è–ª–±–∞—Ä—à—É—É–ª–Ω–∞\n\n"
            "‚úÖ –≠–†–°–î–≠–õ–ì“Æ–ô\n‚úÖ –ê–õ–ë–ê–ù –Å–°–ù–´\n‚úÖ –•–£–†–î–ê–ù\n‚úÖ –£–Ø–ù –•–ê–¢–ê–ù"
        )
    elif "–¥–∞–Ω—Å" in text or "–¥—É–≥–∞–∞—Ä" in text:
        return (
            "üè¶ –î–∞–Ω—Å–Ω—ã –¥—É–≥–∞–∞—Ä—É—É–¥:\n"
            "- –•–∞–∞–Ω –±–∞–Ω–∫: 5077407759\n"
            "- –•—É–¥–∞–ª–¥–∞–∞ –•”©–≥–∂–ª–∏–π–Ω –ë–∞–Ω–∫: 431004884\n"
            "- –ì–æ–ª–æ–º—Ç: 3635112076\n"
            "- –¢”©—Ä–∏–π–Ω –ë–∞–Ω–∫: 343200497501\n"
            "- –•–∞—Å –ë–∞–Ω–∫: 5002742902"
        )
    elif "—É—Ç–∞—Å" in text or "—Ö–æ–ª–±–æ–≥–¥–æ—Ö" in text:
        return "üìû –ú–∞–Ω–∞–π —Ö–æ–ª–±–æ–≥–¥–æ—Ö —É—Ç–∞—Å: 80908090"

    tugrug_match = re.search(r"(\d{3,})\s*—Ç”©–≥—Ä”©–≥", text)
    yuan_match = re.search(r"(\d{3,})\s*—é–∞–Ω—å", text)

    if tugrug_match:
        amount = int(tugrug_match.group(1))
        approx_yuan = amount / HANSH
        fee_t, fee_y = get_fee_by_yuan(approx_yuan)
        net = amount - fee_t
        final_yuan = round(net / HANSH, 2)
        return f"üí∞ {amount:,}‚ÇÆ ‚Üí –®–∏–º—Ç–≥—ç–ª: {fee_t:,}‚ÇÆ + {fee_y}¬• ‚Üí {final_yuan}¬•"

    elif yuan_match:
        yuan = int(yuan_match.group(1))
        fee_t, fee_y = get_fee_by_yuan(yuan)
        return f"üí¥ {yuan:,}¬• ‚Üí –®–∏–º—Ç–≥—ç–ª: {fee_t:,}‚ÇÆ + {fee_y}¬•"

    return None

@app.route(f"/{TOKEN}", methods=["POST"])
def webhook():
    update = telegram.Update.de_json(request.get_json(force=True), bot)
    chat_id = update.effective_chat.id

    if update.message and update.message.text:
        reply = handle_keyword(chat_id, update.message.text)
        if reply:
            bot.send_message(chat_id=chat_id, text=reply)
        else:
            send_main_menu(chat_id)

    elif update.callback_query:
        data = update.callback_query.data
        response = handle_keyword(chat_id, data)
        bot.answer_callback_query(update.callback_query.id)
        bot.send_message(chat_id=chat_id, text=response)

    return "ok"

if __name__ == "__main__":
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)
